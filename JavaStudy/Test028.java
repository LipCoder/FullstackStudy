/*=======================================================
	 ■■■ 연산자(Operator) ■■■
	 - 조건 연산자(-> 삼항 연산자)
=========================================================*/

// 사용자로부터 임의의 한 문자를 입력받아
// 알파벳 대문자이면 소문자로, 알파벳 소문자이면 대문자로
// 그 외 다른 문자이면 그 문자 그대로 출력하는 프로그램을 작성한다.
// 단, 조건연산자(삼항연산자)를 활용하여 구현할 수 있도록 한다.

// 실행 예)
// 한 문자를 입력하세요 : a
// A

// 한 문자를 입력하세요 : H
// h

// 한 문자를 입력하세요 : 6
// 6


/* ※ 문제 인식 및 분석
      1. 단 한 문자를 입력받는 프로그램이기 때문에
	     [System.in.read()] 메소드를 사용.
	  2. 입력받을 수 있는 문자의 유형에 따른 분기
	     -> 알파벳 대문자 / 알파벳 소문자 / 나머지 기타 문자
      3. [System.in.read()] 메소드는 한 문자를

*/

import java.io.IOException;

public class Test028
{
	public static void main(String[] args)	throws IOException
	{
		// myCode
		/*
		char ch;

		System.out.print("한 문자를 입력하세요: ");
		ch = (char)System.in.read();

		// 소문자는 대문자보다 아스키 값이 크다.
		char gap = 'a' - 'A';
		ch += (ch >= '0' && ch <= '9') ? 0 : ((ch < 'a') ? gap : -gap);
		
		// ('A')65 -> + 32 -> ('a')97
		// ('a')97 -> -32 -> ('A') 65

		System.out.printf("%c\n", ch);
		*/

		// teacher's code
		
		// 주요 변수 선언
		char ch, chResult;		// -- 입력 문자, 결과 문자를 담아낼 변수
		char temp;

		// 연산 및 처리
		// 1. 사용자에게 안내 메세지 출력
		System.out.print("한 문자를 입력하세요 : ");

		// 2. 사용자가 입력한 값을 얻어와 변수 ch에 담아내기
		//    자동 형변환 규칙에 위배되므로 형변환 해야 한다.
		ch = (char)System.in.read();
		temp = ch;


		// 3. 조건에 따른 분기 연산 처리
		chResult = (ch >= 'A' && ch <= 'Z') ? (char)(ch += 32) : 
					((ch >= 'a' && ch <= 'z') ? (char)(ch -= 32) : ch);
		
		// 결과 출력
		System.out.println(temp + " -> " + chResult);
	}
}

/*
한 문자를 입력하세요 : 9
9 -> 9
계속하려면 아무 키나 누르십시오 . . .

한 문자를 입력하세요 : A
A -> a
계속하려면 아무 키나 누르십시오 . . .

한 문자를 입력하세요 : a
a -> A
계속하려면 아무 키나 누르십시오 . . .
*/