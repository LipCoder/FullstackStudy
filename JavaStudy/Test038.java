/*=======================================================
	 ■■■ 실행 흐름의 컨트롤 (제어문) ■■■
	 - 조건문(분기문)
	 - if문, if-else문
=========================================================*/

// 과제
// 사용자로부터 알파벳 한 문자를 입력받아
// 이를 판별하여 입력받은 알파벳이 모음(a, e, i, o, u)일 경우만
// 결과를 출력하는 프로그램을 구현한다.
// 단, 대소문자를 모두 적용할 수 있도록 처리한다.
// 또한, 알파벳 이외의 문자가 입력되었을 경우
// 입력 오류에 대한 내용을 사용자에게 안내해 줄 수 있도록 한다.

// 실행 예)
// 알파벳 한 문자 입력 : A
// >> 모음 OK~!!
// 계속하려면 아무 키나 누르세요...

// 알파벳 한 문자 입력 : a
// >> 모음 OK~!!
// 계속하려면 아무 키나 누르세요...

// 알파벳 한 문자 입력 : B
// 계속하려면 아무 키나 누르세요...

// 알파벳 한 문자 입력 : 3
// >> 입력 오류~!!!
// 계속하려면 아무 키나 누르세요...

import java.io.IOException;
public class Test038
{
	public static void main(String[] args) throws IOException
	{
		char ch;
		
		// 알파벳을 입력받는다.
		System.out.print("알파벳 한 문자 입력 : ");
		ch = (char)System.in.read();
		
		// 대소문자 변환을 위한 값
		// 대문자에 gap을 더하면 소문자로 변환
		// 소문자에 gap을 빼면 대문자로 변환
		char gap = 'a' - 'A';
		
		// 알파벳이 맞는지 우선 검사한다.
		if(ch < 'A' || (ch > 'Z' && ch < 'a') || ch > 'z')
		{
			ch = 0; // 알파벳이 아니라면 0을 넣어둔다.
		}
		// 알파벳이 맞다면 뒤에서는 소문자로만 검사하므로
		// 대문자일 경우 소문자로 바꿔준다.
		else if(ch >= 'A' && ch <= 'Z')  
		{
			ch += gap;
		}

		// 0이면 알파벳이 아닌 것이므로 입력 오류 출력
		if(ch == 0)
		{
			System.out.println(">> 입력 오류~!!");
		}
		// 입력받은 알파벳이 모음이 맞다면 출력
		else if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')
		{
			System.out.println(">> 모음 OK~!!");
		}
	}
}