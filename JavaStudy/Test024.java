/*=======================================================
	 ■■■ 연산자(Operator) ■■■
	 - 비트 연산자
=========================================================*/
public class Test024
{
    public static void main(String[] args)
    {
        int x = 128;	// 00000000 00000000 00000000 10000000
	
		// << n : 2^n을 곱함
		System.out.printf("x << 3 : %d\n", x << 3);  // 00000000 00000000 00000100 00000000
		System.out.printf("x * 8  : %d\n", x * 8);

		// >> n : 2^n을 나눔
		System.out.printf("x >> 3 : %d\n", x >> 3);  // 00000000 00000000 00000000 00010000
		System.out.printf("x / 8  : %d\n", x / 8);

		System.out.printf("x << 24 : %d\n", x << 24);
		// --==>> x << 24 : -214748648
		// 10000000 00000000 00000000 00000000

		System.out.printf("x << 25 : %d\n", x << 25);
		System.out.printf("x << 26 : %d\n", x << 26);
		System.out.printf("x << 29 : %d\n", x << 29);
		System.out.printf("x << 31 : %d\n", x << 31);
		// --==>>	x << 25 : 0
		//			x << 26 : 0
		//			x << 29 : 0
		//			x << 31 : 0

		
		// 왼쪽 쉬프트 연산이 범위를 넘어가면 첫번째 자리로 되돌아온다(내부에서는)
		// 하지만 사용자한테 보여지는 값은 0이다.
		System.out.printf("x << 32 : %d\n", x << 32);
		//			x << 32 : 128
    }
}
/*
x << 3 : 1024
x * 8  : 1024
x >> 3 : 16
x / 8  : 16
x << 24 : -2147483648
x << 25 : 0
x << 26 : 0
x << 29 : 0
x << 31 : 0
x << 32 : 128
계속하려면 아무 키나 누르십시오 . . .
*/