■■■ AJAX ■■■

○ 개요

   AJAX 는 XML 에 기반한 종합 기술로
   비동기 자바스크립트 XML(Asynchronous Javascript + XML) 을 줄인 말로
   자바스크립트로 HTTP 요청을 보내서 XML 응답을 받아 사용하는 기술이다.

   AJAX 는 하나의 독립된 기술이... 아니다.
   화면은 표준 HTML + CSS 로 구성 및 작성하고
   화면에 대한 조작과 상호작용은 문객체모델(Document Object Model)로 처리하고
   데이터 교환은 XML 형식으로 처리하며,
   데이터의 변환과 검색은 XML 기술인 XSL 과 XPath 를 사용하며,
   비동기 통신에는 웹 브라우저 안에 내장되어 있는
   XMLHttpRequest 객체를 사용하고,
   이 모든 것을 하나로 묶는 언어로써 Javascript 를 사용하는 것...
   이것을 AJAX 라고 한다.


○ 처리 과정

   HTTP 요청을 보냄 → XML 문서를 응답으로 받음
   → 자동으로 XML 개체가 생성됨
   → 자바스크립트는 XML 개체에 접근하여 다양한 작업을 진행하게 됨.

   ==> 자바스크립트로 HTTP 요청을 보내서 XML 응답을 받아 사용하는 기술.


○ 장점

   - 비동기 통신을 사용함으로써 데이터를 보내고 나서도
     사용자는 다른 작업을 할 수 있게 된다.
   - 데이터만 들어가 있는 형식으로 응답을 받게 되기 때문에
     전통적인 웹 어플리케이션 방식에 비해서 서버측의 처리 속도도 빠르고
     전송 데이터의 양도 훨씬 적다.
   - 응답으로 받은 XML 문서를 XML 개체로 접근하여 스크립트로 조작하고
     XPath 를 사용하여 XML 문서를 검색하거나
     XSL 을 사용하여 변환하거나 하는 것들이 가능하다.
     따라서... 실행의 속도가 빠르다.


○ 단점

   - 외부 검색 엔진이 웹 페이지를 검색할 수 없는 문제가 있다.
   - AJAX 는 클라이언트 풀링 방식으로 실시간 서비스를 제공할 수 없다.
   - AJAX 가 포함된 HTML 페이지가... 속해있는 서버가 아닌
     다른 서버로 요청을 보낼 수 없고, 클라이언트 PC 파일에 접근할 수도 없다.


○ 기존의 웹 사이트에서 AJAX 를 활용하면 효과가 있는 경우
   
   - 웹 페이지를 바꾸지 않고 현재 페이지에서 어떤 동작을 해야 하는 기능이 필요할 때.
   - 불필요한 팝업을 사용하여 처리하는 작업을 수행할 때


○ AJAX 애플리케이션으로 개발할 필요가 없는 경우

   - 여러 번 불필요한 화면을 다시 출력할 때
   - 특정한 데이터를 반복 사용하면서 다양한 작업을 수행할 때


○ 주의사항

   - 뒤로가기 버튼 사용의 어려움
     AJAX 는 Javascript 를 사용해서 동작하기 때문에
     페이지 단위 브라우저에서 사용자 경험과 다르게 작동하는 경우가 발생한다.
     특히, 뒤로가기 버튼이 무용지물이 되기 때문에
     AJAX 를 유해한 기술로 매도하는 경우까지 발생하기도 한다.
     (뒤로가기 버튼은 일반적으로 웹 서핑 이용 시
      일반 클릭 다음으로 많이 사용되는 기능이다.)
     하지만, 이미 iframe 을 사용한 해결책이 제시된 바 있다.
     또한, AJAX 를 활용한 서비스 사용 경험이 증대 될수록
     이러한 문제는 줄어들 것으로 전망하고 있다.

   - 진행상황 파악의 어려움
     XMLHttpRequest 를 통해 통신을 하는 경우
     웹 페이지 로딩과는 달리 사용자에게 아무런 진행 정보가 주어지지 않는다.
     그래서... 아직 요청이 완료되지 않았는데 사용자가 페이지를 떠나버리거나
     오작동을 수행할 우려가 발생하게 된다.
     이 경우 사용자 요청이 처리중에 있다는 표시를 화면에 보여주도록 권고되고 있다.
     예를 들어 Gmail 에서는 중간중간 loading 이라는 상태 표시를 통해
     사용자의 요청이 처리중임을 알려주고 있다.
     이러한 상태는 XMLHttpRequest.readyState 의 상태를 통해 판단할 수 있다.
     또한, 이 때 사용할 수 있는 공개된 이미지 등도
     http://www.w3.org 사이트 등을 통해 제공되고 있다.


○ AJAX 개체의 사용

   AJAX 를 사용하기 위해서는 먼저 AJAX 개체 생성 함수를 사용하여
   AJAX 객체를 만들어야 한다.

   ex)
   - 인터넷 익스플로러 → 『new ActiveObject("Microsoft.XMLHTTP")』
   - 모질라 웹브라우저 → 『new XMLHttpRequest()』

   등... 브라우저마다 AJAX 객체의 생성 방법이 다를 수 있다.


---------------------------------------------------------------------------------------------

○ 정리

1. Asynchronous Javascript And XML.
   =            =          =   =

2. 비동기 통신을 지원하는 자바스크립트 기술.

웹 → 동기 통신.  턴 방식.
(클라이언트와 서버 간의 데이터 교환을 턴 방식으로 운영한다.)
클라이언트가 서버에 요청을 보내고, 응답이 돌아올 때 까지 클라이언트는 대기.
응답이 돌아오면, 기존의 결과는 모두 삭제되고,
새 응답을 가지고 다시 전체 출력을 하게 된다.

AJAX → 비동기 통신.
클라이언트가 서버에 요청을 보내고, 응답이 돌아올 때 까지 백그라운드에서 처리된다.
사용자는 AJAX 요청, 응답 과정에서 영향을 받지 않는다.
응답이 돌아오면, 기존의 결과에 응답을 추가하는 형태로 결과를 보여준다.

3. AJAX 요청 절차 
   - XMLHttpRequest 객체 생성
   - AJAX 객체 정보 설정
     (서버 주소, 데이터 첨부, 방식-비동기, 콜백함수)
   - AJAX 요청 (send)
   - AJAX 상태 이벤트 확인 콜백 함수 호출
   - 서버로부터 응답이 도착하면(이벤트) 결과 출력. DOM 기술.


○ AJAX 작동 방식

   1. 웹 페이지에서 이벤트 발생. (페이지가 로드된 이후 버튼 클릭)
   2. Javascript 에 의해 XMLHttpRequest 객체 생성.
   3. 생성된 XMLHttpRequest 객체가 웹 서버에 요청 전송.
   4. 서버가 이 요청에 대한 처리.
   5. 서버가 웹 페이지로 응답 전송.
   6. Javascript 가 응답을 수신.
   7. Javascript 가 수신한 응답 내용을 바탕으로 액션 처리(예:페이지 업데이트) 수행.